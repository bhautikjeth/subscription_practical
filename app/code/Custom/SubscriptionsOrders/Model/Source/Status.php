<?php
/**
 * @category   Custom
 * @package    Custom_SubscriptionsOrders
 * @author     a@a.com
 * @copyright  This file was generated by using Module Creator(http://code.vky.co.in/magento-2-module-creator/) provided by VKY <viky.031290@gmail.com>
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

namespace Custom\SubscriptionsOrders\Model\Source;

use Magento\Eav\Model\Entity\Attribute\Source\AbstractSource;
use Magento\Eav\Model\Entity\Attribute\Source\SourceInterface;
use Magento\Framework\Data\OptionSourceInterface;

/**
 * Item status functionality model
 */
class Status extends AbstractSource implements SourceInterface, OptionSourceInterface
{
    /**#@+
     * Item Status values
     */
    const FRAUD = 0;
    const PROCESSING = 1;
    const PENDING_PAYMENT = 2;
    const CANCELED = 3;
    const PAYMENT_REVIEW = 4;
    const PENDING = 5;
    const HOLDED = 6;
    const COMPLETE = 7;
    const CLOSED = 8;

    /**#@-*/

    /**
     * Retrieve option array
     *
     * @return string[]
     */
    public static function getOptionArray()
    {
        return [self::FRAUD => 0,
            self::PROCESSING => 1,
            self::PENDING_PAYMENT => 2,
            self::CANCELED => 3,
            self::PAYMENT_REVIEW => 4,
            self::PENDING => 5,
            self::HOLDED => 6,
            self::COMPLETE => 7,
            self::CLOSED => 8];
    }

    /**
     * Retrieve option array with empty value
     *
     * @return string[]
     */
    public function getAllOptions()
    {
        $options = [0 => 'fraud', 1 => 'processing', 2 => 'pending_payment', 3 => 'canceled', 4 => 'payment_review', 5 => 'pending', 6 => 'holded', 7 => 'complete', 8 => 'closed'];
        $result = [];

        foreach (self::getOptionArray() as $index => $value) {
            $result[] = ['value' => $index, 'label' => $options[$value]];
        }

        return $result;
    }
}
