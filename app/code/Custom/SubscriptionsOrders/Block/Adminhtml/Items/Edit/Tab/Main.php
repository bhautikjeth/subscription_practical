<?php
/**
 * @category   Custom
 * @package    Custom_SubscriptionsOrders
 * @author     a@a.com
 * @copyright  This file was generated by using Module Creator(http://code.vky.co.in/magento-2-module-creator/) provided by VKY <viky.031290@gmail.com>
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

namespace Custom\SubscriptionsOrders\Block\Adminhtml\Items\Edit\Tab;

use Magento\Backend\Block\Widget\Form\Generic;
use Magento\Backend\Block\Widget\Tab\TabInterface;

class Main extends Generic implements TabInterface
{
    protected $_wysiwygConfig;

    public function __construct(
        \Magento\Backend\Block\Template\Context $context,
        \Magento\Framework\Registry $registry,
        \Magento\Framework\Data\FormFactory $formFactory,
        \Magento\Cms\Model\Wysiwyg\Config $wysiwygConfig,
        array $data = []
    )
    {
        $this->_wysiwygConfig = $wysiwygConfig;
        parent::__construct($context, $registry, $formFactory, $data);
    }

    /**
     * {@inheritdoc}
     */
    public function getTabLabel()
    {
        return __('Item Information');
    }

    /**
     * {@inheritdoc}
     */
    public function getTabTitle()
    {
        return __('Item Information');
    }

    /**
     * {@inheritdoc}
     */
    public function canShowTab()
    {
        return true;
    }

    /**
     * {@inheritdoc}
     */
    public function isHidden()
    {
        return false;
    }

    /**
     * Prepare form before rendering HTML
     *
     * @return $this
     * @SuppressWarnings(PHPMD.NPathComplexity)
     * @SuppressWarnings(PHPMD.ExcessiveMethodLength)
     */
    protected function _prepareForm()
    {
        $model = $this->_coreRegistry->registry('current_custom_subscriptionsorders_items');
        /** @var \Magento\Framework\Data\Form $form */
        $form = $this->_formFactory->create();
        $form->setHtmlIdPrefix('item_');
        $fieldset = $form->addFieldset('base_fieldset', ['legend' => __('Item Information')]);
        if ($model->getId()) {
            $fieldset->addField('subscriptionsorders_id', 'hidden', ['name' => 'subscriptionsorders_id']);
        }
        $fieldset->addField(
            'customer_id',
            'text',
            ['name' => 'customer_id', 'label' => __('Customer Id'), 'title' => __('Customer Id'), 'required' => true, 'disabled' => 'disabled']
        );

        $fieldset->addField(
            'order_id',
            'text',
            ['name' => 'order_id', 'label' => __('Order Id'), 'title' => __('Order Id'), 'required' => true, 'disabled' => 'disabled']
        );
        $fieldset->addField(
            'product_id',
            'text',
            ['name' => 'product_id', 'label' => __('Product Id'), 'title' => __('Product Id'), 'required' => true, 'disabled' => 'disabled']
        );
        $fieldset->addField(
            'sku',
            'text',
            ['name' => 'sku', 'label' => __('SKU'), 'title' => __('SKU'), 'required' => true, 'disabled' => 'disabled']
        );
        $fieldset->addField(
            'product_name',
            'text',
            ['name' => 'product_name', 'label' => __('Product Name'), 'title' => __('Product Name'), 'required' => true, 'disabled' => 'disabled']
        );

        $fieldset->addField(
            'price_discount',
            'text',
            ['name' => 'price_discount', 'label' => __('Price with Discount'), 'title' => __('Price with Discount'), 'required' => true, 'disabled' => 'disabled']
        );
        $fieldset->addField(
            'special_price_discount',
            'text',
            ['name' => 'special_price_discount', 'label' => __('Special Price with Discount'), 'title' => __('Special Price with Discount'), 'required' => true, 'disabled' => 'disabled']
        );
        $fieldset->addField(
            'discount',
            'text',
            ['name' => 'discount', 'label' => __('Discount'), 'title' => __('Discount'), 'required' => true, 'disabled' => 'disabled']
        );
        $fieldset->addField(
            'customer_name',
            'text',
            ['name' => 'customer_name', 'label' => __('Customer Name'), 'title' => __('Customer Name'), 'required' => true, 'disabled' => 'disabled']
        );

        $fieldset->addField(
            'subscription',
            'select',
            ['name' => 'subscription', 'label' => __('Subscription'), 'title' => __('Subscription'), 'options' => [0 => 'Daily', 1 => 'Weekly', 2 => 'Monthly', 3 => 'Yearly'], 'required' => true, 'disabled' => 'disabled']
        );

        $fieldset->addField(
            'subscription_start',
            'text',
            ['name' => 'subscription_start', 'label' => __('Subscription Start'), 'title' => __('Subscription Start'), 'required' => true, 'disabled' => 'disabled']
        );

        $fieldset->addField(
            'subscription_end',
            'text',
            ['name' => 'subscription_end', 'label' => __('Subscription End'), 'title' => __('Subscription End'), 'required' => true, 'disabled' => 'disabled']
        );

        $fieldset->addField(
            'status',
            'select',
            ['name' => 'status', 'label' => __('Status'), 'title' => __('Status'), 'options' => [0 => 'fraud', 1 => 'processing', 2 => 'pending_payment', 3 => 'canceled', 4 => 'payment_review', 5 => 'pending', 6 => 'holded', 7 => 'complete', 8 => 'closed'], 'required' => true]
        );

        $form->setValues($model->getData());
        $this->setForm($form);
        return parent::_prepareForm();
    }
}
